{"version":3,"sources":["components/common/map/useMapHooks.js","components/common/map/GoogleMapsComponent.js"],"names":["useStyles","makeStyles","theme","tooltip","typography","caption","position","padding","spacing","borderRadius","shape","backgroundColor","palette","grey","color","transform","display","top","left","width","height","marginLeft","borderLeft","borderRight","borderTop","useMapHooks","classes","dispatch","useDispatch","isHovering","handleViewStateChange","viewState","setViewState","handleSizeChange","handleHover","object","handleCursor","isDragging","handleTooltip","info","html","className","style","background","GoogleMapsComponent","layers","useSelector","state","carto","basemap","BASEMAPS","googleApiKey","apiKey","onViewStateChange","onResize","getTooltip"],"mappings":"iOAIMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,QAAS,CACP,aAAa,2BACRD,EAAME,WAAWC,SADtB,IAEEC,SAAU,WACVC,QAASL,EAAMM,QAAQ,EAAG,KAC1BC,aAAcP,EAAMQ,MAAMD,aAC1BE,gBAAiBT,EAAMU,QAAQC,KAAK,KACpCC,MAAO,4BACPC,UAAU,gCAAD,OAAkCb,EAAMM,QAAQ,KAAhD,QAET,WAAY,CACVQ,QAAS,QACTV,SAAU,WACVW,IAAK,mBACLC,KAAM,MACNC,MAAO,EACPC,OAAQ,EACRC,WAAYnB,EAAMM,SAAS,GAC3Bc,WAAW,GAAD,OAAKpB,EAAMM,QAAQ,GAAnB,wBACVe,YAAY,GAAD,OAAKrB,EAAMM,QAAQ,GAAnB,wBACXgB,UAAU,GAAD,OAAKtB,EAAMM,QAAQ,GAAnB,oBAAiCN,EAAMU,QAAQC,KAAK,cAM9D,SAASY,IACd,IAAMC,EAAU1B,IACV2B,EAAWC,wBAEbC,GAAa,EA2BjB,MAAO,CACLC,sBA1B4B,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAC/BJ,EAASK,uBAAaD,KA0BtBE,iBAvBuB,SAAC,GAAuB,IAArBd,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,OACjCO,EAASK,uBAAa,CAAEb,QAAOC,aAuB/Bc,YApBkB,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OAAiBN,IAAeM,GAqBlDC,aApBmB,SAAC,GAAD,SAAGC,WACT,WAAaR,EAAa,UAAY,QAoBnDS,cAlBoB,SAACC,GACrB,UAAIA,QAAJ,IAAIA,OAAJ,EAAIA,EAAMJ,OACR,MAAO,CACLK,KAAK,wBAAD,OAA0BD,EAAKJ,OAAOK,KAAtC,mCACJC,UAAWf,EAAQvB,QACnBuC,MAAO,CACLnC,QAAS,EACToC,WAAY,a,0ICnDP,SAASC,EAAT,GAA0C,IAAXC,EAAU,EAAVA,OACtCd,EAAYe,uBAAY,SAACC,GAAD,OAAWA,EAAMC,MAAMjB,aAC/CkB,EAAUH,uBAAY,SAACC,GAAD,OAAWG,WAASH,EAAMC,MAAMC,YACtDE,EAAeL,uBAAY,SAACC,GAAD,OAAWA,EAAMC,MAAMG,gBAHF,EAIa1B,cAA3DQ,EAJ8C,EAI9CA,iBAAkBK,EAJ4B,EAI5BA,cAAeR,EAJa,EAIbA,sBAEzC,OACE,cAAC,YAAD,CACEmB,QAASA,EACTG,OAAQD,EACRpB,UAAS,eAAOA,GAChBc,OAAQA,EACRQ,kBAAmBvB,EACnBwB,SAAUrB,EACVsB,WAAYjB","file":"static/js/google-map.2417d5ea.chunk.js","sourcesContent":["import { useDispatch } from 'react-redux';\nimport { makeStyles } from '@material-ui/core';\nimport { setViewState } from '@carto/react-redux';\n\nconst useStyles = makeStyles((theme) => ({\n  tooltip: {\n    '& .content': {\n      ...theme.typography.caption,\n      position: 'relative',\n      padding: theme.spacing(1, 1.5),\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: theme.palette.grey[900],\n      color: 'rgba(255, 255, 255, 0.75)',\n      transform: `translate(-50%, calc(-100% - ${theme.spacing(2.5)}px))`,\n\n      '& .arrow': {\n        display: 'block',\n        position: 'absolute',\n        top: 'calc(100% - 1px)',\n        left: '50%',\n        width: 0,\n        height: 0,\n        marginLeft: theme.spacing(-1),\n        borderLeft: `${theme.spacing(1)}px solid transparent`,\n        borderRight: `${theme.spacing(1)}px solid transparent`,\n        borderTop: `${theme.spacing(1)}px solid ${theme.palette.grey[900]}`,\n      },\n    },\n  },\n}));\n\nexport function useMapHooks() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  let isHovering = false;\n\n  const handleViewStateChange = ({ viewState }) => {\n    dispatch(setViewState(viewState));\n  };\n\n  const handleSizeChange = ({ width, height }) => {\n    dispatch(setViewState({ width, height }));\n  };\n\n  const handleHover = ({ object }) => (isHovering = !!object);\n  const handleCursor = ({ isDragging }) =>\n    isDragging ? 'grabbing' : isHovering ? 'pointer' : 'grab';\n\n  const handleTooltip = (info) => {\n    if (info?.object) {\n      return {\n        html: `<div class='content'>${info.object.html}<div class='arrow'></div></div>`,\n        className: classes.tooltip,\n        style: {\n          padding: 0,\n          background: 'none',\n        },\n      };\n    }\n  };\n\n  return {\n    handleViewStateChange,\n    handleSizeChange,\n    handleHover,\n    handleCursor,\n    handleTooltip,\n  };\n}\n","import { useSelector } from 'react-redux';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport { BASEMAPS, GoogleMap } from '@carto/react-basemaps';\nimport { useMapHooks } from './useMapHooks';\n\nexport default function GoogleMapsComponent({ layers }) {\n  const viewState = useSelector((state) => state.carto.viewState);\n  const basemap = useSelector((state) => BASEMAPS[state.carto.basemap]);\n  const googleApiKey = useSelector((state) => state.carto.googleApiKey);\n  const { handleSizeChange, handleTooltip, handleViewStateChange } = useMapHooks();\n\n  return (\n    <GoogleMap\n      basemap={basemap}\n      apiKey={googleApiKey}\n      viewState={{ ...viewState }}\n      layers={layers}\n      onViewStateChange={handleViewStateChange}\n      onResize={handleSizeChange}\n      getTooltip={handleTooltip}\n    />\n  );\n}\n"],"sourceRoot":""}